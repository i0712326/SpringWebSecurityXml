<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd">
	<context:property-placeholder location="classpath*:application.properties"/>
	<context:component-scan base-package="com.spring.web.security.rest.*"/>
	
	<http entry-point-ref="authEntityPoint">
		<custom-filter before="HEADERS_FILTER" ref="customFilter"/>
		<intercept-url pattern="/protected/user/**" access="ROLE_USER,ROLE_ADMIN"/>
		<intercept-url pattern="/protected/admin/**" access="ROLE_ADMIN"/>
	</http>

	<authentication-manager alias="authenticationManager">
	  <authentication-provider user-service-ref="userDetailsService">
	  	<password-encoder hash="bcrypt"/>
	  </authentication-provider>
	</authentication-manager>
	
	<!-- resource -->
	
	<beans:bean id="customFilter" class="com.spring.web.security.rest.CustomFilter">
		<beans:property name="tokenHeader" value="${jwt.header}"/>
		<beans:property name="jwtTokenUtil" ref="jwtTokenUtil"/>
		<beans:property name="userDetailsService" ref="userDetailsService"/>
	</beans:bean>
	
	<beans:bean id="jwtTokenUtil" class="com.spring.web.security.rest.jwt.JwtTokenUtil">
		<beans:property name="secret" value="${jwt.secret}"/>
		<beans:property name="expiration" value="${jwt.expiration}"/>
	</beans:bean>
	
	<beans:bean id="authEntityPoint" class="com.spring.web.security.rest.AuthEntityPoint"/>
	
	<beans:bean id="userDetailsService" class="com.spring.web.security.rest.user.detail.UserDetailsServiceImp">
		<beans:property name="userService" ref="userService"/>
	</beans:bean>
	
	<beans:bean id="userService" class="com.spring.web.security.dao.service.UserServiceImp">
		<beans:property name="userDao" ref="userDao"/>
	</beans:bean>
	
	<beans:bean id="userDao" class="com.spring.web.security.dao.UserDaoImp">
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
	
	<beans:bean id="dataSource" destroy-method="close"  class="org.apache.commons.dbcp.BasicDataSource">
	    <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <beans:property name="url" value="jdbc:mysql://localhost:3306/auth"/>
	    <beans:property name="username" value="phoud"/>
	    <beans:property name="password" value="Qf48d8uv12!@"/>
	    <beans:property name="initialSize" value="3"/>
	</beans:bean>
	
	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mappingResources">
			<beans:list>
				<!-- User Entity -->
				<beans:value>com/spring/web/security/entity/User.hbm.xml</beans:value>
				<beans:value>com/spring/web/security/entity/Authority.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
</beans:beans>